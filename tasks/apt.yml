---
- name: Configure Docker apt repo
  block:

    - name: Find legacy Docker apt list files
      ansible.builtin.find:
        paths: /etc/apt/sources.list.d
        patterns: "*docker*.list"
      register: docker_old_apt_list_files

    - name: List legacy Docker apt list files to be disabled
      ansible.builtin.debug:
        msg: "apt list file {{ file.path }} to be moved to {{ file.path }}.ansible.save"
      loop: "{{ docker_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( docker_old_apt_list_files.matched >= 1 )

    - name: Disable legacy Docker apt list files
      command: "mv {{ file.path }} {{ file.path }}.ansible.save"
      loop: "{{ docker_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( docker_old_apt_list_files.matched >= 1 )

    - name: Legacy Docker GPG key absent
      ansible.builtin.apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: absent

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Docker ascii armored gpg key present
      ansible.builtin.get_url:
        url: "{{ docker_gpg_url }}"
        checksum: "{{ docker_gpg_checksum }}"
        dest: /root/docker.asc
        mode: 0644
        owner: root
        group: root
      register: docker_tmp_asc_file

    - name: Stat Docker ascii armored gpg file
      ansible.builtin.stat:
        path: /root/docker.asc
      register: docker_asc_file

    - name: Stat Docker gpg dearmored file
      ansible.builtin.stat:
        path: /etc/apt/keyrings/docker.gpg
      register: docker_gpg_file

    - name: Check the Docker gpg key when it exists
      block:

        - name: Docker gpg key dearmored
          ansible.builtin.shell: |
            set -e -o pipefail
            gpg --dearmor < /root/docker.asc > /etc/apt/keyrings/docker.gpg
          args:
            executable: "{{ ansible_local.bash.path }}"
          when: ( docker_tmp_asc_file.changed | bool ) or ( not docker_gpg_file.stat.exists | bool )

        - name: Stat Docker gpg dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/docker.gpg
          register: docker_gpg_file

        - name: Docker gpg key check command
          ansible.builtin.command: >
            gpg --with-colons
            {% if ansible_local.gpg.version is version('2.2.12', '<') %}
            --with-fingerprint --with-subkey-fingerprint
            {% else %}
            --show-keys
            {% endif %}
            /etc/apt/keyrings/docker.gpg
          when: docker_gpg_file.stat.exists | bool
          check_mode: false
          changed_when: false
          register: docker_gpg

        - name: Set a fact for the GPG fingerprints
          ansible.builtin.set_fact:
            docker_gpg_fingerprints_found: "{{ docker_gpg.stdout | community.general.jc('gpg') | community.general.json_query('[?type==`fpr`].user_id') | list }}"

        - name: Docker gpg key check first fingerprint for GPG versions less that 2.2.12
          ansible.builtin.assert:
            that:
              - docker_gpg_fingerprints_found[0] == docker_gpg_fingerprints[0]
          when: ansible_local.gpg.version is version('2.2.12', '<')

        - name: Docker gpg key check all fingerprints
          ansible.builtin.assert:
            that:
              - docker_gpg_fingerprints_found | difference(docker_gpg_fingerprints) | length == 0
              - docker_gpg_fingerprints | difference(docker_gpg_fingerprints_found) | length == 0
          when: ansible_local.gpg.version is version('2.2.12', '>=')

      when: docker_asc_file.stat.exists | bool

    - name: Docker apt repo available
      ansible.builtin.template:
        src: docker.sources.j2
        dest: /etc/apt/sources.list.d/docker.sources
        mode: 0644
        owner: root
        group: root
      register: docker_sources

    - name: Docker apt preferences present
      ansible.builtin.template:
        src: docker.pref.j2
        dest: /etc/apt/preferences.d/docker.pref
        mode: 0644
        owner: root
        group: root
      register: docker_preferences

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      when: ( docker_sources.changed | bool ) or ( docker_preferences.changed | bool )

  tags:
    - docker
    - docker_apt
...
