---
- name: Configure Docker apt repo
  block:

    - name: Legacy Docker apt sources list absent
      ansible.builtin.file:
        path: "{{ apt_list }}"
        state: absent
      loop:
        - /etc/apt/sources.list.d/download_docker_com_linux_debian.list
        - /etc/apt/sources.list.d/docker.list
      loop_control:
        loop_var: apt_list
        label: "{{ apt_list | basename }}"

    - name: Legacy Docker GPG key absent
      ansible.builtin.apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: absent

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: Docker ascii armored gpg key present
      ansible.builtin.get_url:
        url: "{{ docker_gpg_url }}"
        checksum: "{{ docker_gpg_checksum }}"
        dest: /root/docker.asc
        mode: 0644
        owner: root
        group: root
      register: docker_tmp_asc_file

    - name: Stat Docker ascii armored gpg file
      ansible.builtin.stat:
        path: /root/docker.asc
      register: docker_asc_file

    - name: Check the Docker gpg key when it exists
      block:

        - name: Stat Docker gpg dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/docker.gpg
          register: docker_gpg_file

        - name: Docker gpg key dearmored
          ansible.builtin.shell: |
            set -e -o pipefail
            gpg --dearmor < /root/docker.asc > /etc/apt/keyrings/docker.gpg
          args:
            executable: "{% if ansible_distribution == 'Ubuntu' %}/usr/bin/bash{% elif ansible_distribution == 'Debian' %}/bin/bash{% endif %}"
          when: ( docker_tmp_asc_file.changed | bool ) or ( not docker_gpg_file.stat.exists | bool )

        - name: Stat Docker gpg dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/docker.gpg
          register: docker_gpg_file

        - name: Docker gpg key check command
          ansible.builtin.command: >
            gpg --with-colons
            {% if ansible_distribution == "Ubuntu" and ansible_distribution_version is version('18.04', '<=') %}
            --with-fingerprint --with-subkey-fingerprint
            {% elif ansible_distribution == "Debian" and ansible_distribution_version is version('10.0', '<') %}
            --with-fingerprint --with-subkey-fingerprint
            {% else %}
            --show-keys
            {% endif %}
            /etc/apt/keyrings/docker.gpg
          when: docker_gpg_file.stat.exists | bool
          check_mode: false
          changed_when: false
          register: docker_gpg

        - name: Docker gpg key checked
          ansible.builtin.assert:
            that:
              - fpr in docker_gpg.stdout
          when:
          loop: "{{ docker_gpg_fingerprints }}"
          loop_control:
            loop_var: fpr

      when: docker_asc_file.stat.exists | bool

    - name: Docker apt repo available
      ansible.builtin.template:
        src: docker.sources.j2
        dest: /etc/apt/sources.list.d/docker.sources
        mode: 0644
        owner: root
        group: root
      register: docker_sources

    - name: Docker apt preferences present
      ansible.builtin.template:
        src: docker.pref.j2
        dest: /etc/apt/preferences.d/docker.pref
        mode: 0644
        owner: root
        group: root
      register: docker_preferences

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      when: ( docker_sources.changed | bool ) or ( docker_preferences.changed | bool )

  tags:
    - docker
    - docker_apt
...
