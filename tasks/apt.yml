# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects Docker Ansible role.
#
# The Webarchitects Docker Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Docker Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Docker Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Configure Docker apt repo
  block:

    - name: Requirements present
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-apt
          - python3-debian
          - python3-docker
          # https://github.com/wimpysworld/deb-get/issues/1215
          # - software-properties-common
        state: present
        update_cache: true

    - name: Find legacy Docker apt list files
      ansible.builtin.find:
        paths: /etc/apt/sources.list.d
        patterns: "*docker*.list"
      register: docker_old_apt_list_files

    - name: List legacy Docker apt list files to be disabled
      ansible.builtin.debug:
        msg: "apt list file {{ file.path }} to be moved to {{ file.path }}.ansible.save"
      loop: "{{ docker_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( docker_old_apt_list_files.matched >= 1 )

    - name: Disable legacy Docker apt list files
      ansible.builtin.command: "mv {{ file.path }} {{ file.path }}.ansible.save"
      changed_when: true
      loop: "{{ docker_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( docker_old_apt_list_files.matched >= 1 )

    - name: Legacy Docker GPG key absent
      ansible.builtin.apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: absent

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Docker ascii armored gpg key present
      ansible.builtin.get_url:
        url: "{{ docker_gpg_url }}"
        checksum: "{{ docker_gpg_checksum }}"
        dest: /root/docker.asc
        mode: "0644"
        owner: root
        group: root
      register: docker_tmp_asc_file

    - name: Stat Docker ascii armored gpg file
      ansible.builtin.stat:
        path: /root/docker.asc
      register: docker_asc_file

    - name: Stat Docker gpg dearmored file
      ansible.builtin.stat:
        path: /etc/apt/keyrings/docker.gpg
      register: docker_gpg_file

    - name: Check the Docker gpg key when it exists
      block:

        - name: Docker gpg key dearmored
          ansible.builtin.shell: |-
            set -e -o pipefail
            gpg --dearmor < /root/docker.asc > /etc/apt/keyrings/docker.gpg
            chmod 644 /etc/apt/keyrings/docker.gpg
          args:
            executable: "{{ ansible_facts.ansible_local.bash.path }}"
          changed_when: false
          when: ( docker_tmp_asc_file.changed | bool ) or ( not docker_gpg_file.stat.exists | bool )

        - name: Stat Docker gpg dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/docker.gpg
          register: docker_gpg_file

        - name: Check GPG keys
          block:

            - name: Docker gpg key check command
              ansible.builtin.command: >
                gpg --with-colons
                {% if ansible_facts.ansible_local.gpg.version is version('2.2.12', '<') %}
                --with-fingerprint --with-subkey-fingerprint
                {% else %}
                --show-keys
                {% endif %}
                /etc/apt/keyrings/docker.gpg
              check_mode: false
              changed_when: false
              register: docker_gpg

            - name: Set a fact for the GPG fingerprints
              ansible.builtin.set_fact:
                docker_gpg_fingerprints_found: "{{ docker_gpg.stdout | string | community.general.jc('gpg') | community.general.json_query('[?type==`fpr`].user_id') | list }}"
              when: docker_gpg is defined

            - name: Docker gpg key check first fingerprint for GPG versions less that 2.2.12
              ansible.builtin.assert:
                that:
                  - docker_gpg_fingerprints_found[0] == docker_gpg_fingerprints[0]
              when:
                - docker_gpg_fingerprints_found is defined
                - ansible_facts.ansible_local.gpg.version is version('2.2.12', '<')

            - name: Docker gpg key check all fingerprints
              ansible.builtin.assert:
                that:
                  - docker_gpg_fingerprints_found | difference(docker_gpg_fingerprints) | length == 0
                  - docker_gpg_fingerprints | difference(docker_gpg_fingerprints_found) | length == 0
              when:
                - docker_gpg_fingerprints_found is defined
                - ansible_facts.ansible_local.gpg.version is version('2.2.12', '>=')

            - name: Stat Docker repository sources file
              ansible.builtin.stat:
                path: /etc/apt/sources.list.d/docker.sources
              register: docker_sources_path

            - name: Read and backup Docker repository sources file
              block:

                - name: Slurp /etc/apt/sources.list.d/docker.sources
                  ansible.builtin.slurp:
                    src: /etc/apt/sources.list.d/docker.sources
                  register: docker_sources_contents_b64encoded

                - name: Decode the base64 encoded version of /etc/apt/sources.list.d/docker.sources
                  ansible.builtin.set_fact:
                    docker_sources_contents: "{{ docker_sources_contents_b64encoded['content'] | ansible.builtin.b64decode | string | community.general.jc('ini') }}"

                - name: Print the contents of /etc/apt/sources.list.d/docker.sources
                  ansible.builtin.debug:
                    var: docker_sources_contents
                    verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"

                - name: Set a fact for the prior Docker repository sources file contents
                  ansible.builtin.set_fact:
                    docker_sources_contents_prior: "{{ docker_sources_contents }}"
                  when: docker_sources_contents is defined

                - name: Check Docker repository sources file present
                  ansible.builtin.deb822_repository:
                    allow_downgrade_to_insecure: false
                    allow_insecure: false
                    allow_weak: false
                    architectures: "{{ ansible_facts.ansible_local.dpkg.arch }}"
                    check_date: true
                    check_valid_until: true
                    components: stable
                    enabled: true
                    name: docker
                    signed_by: /etc/apt/keyrings/docker.gpg
                    suites: "{{ ansible_facts.distribution_release }}"
                    types: deb
                    uris: "https://download.docker.com/linux/{{ ansible_facts.distribution | lower }}"
                  check_mode: true
                  changed_when: false
                  register: docker_sources_check

                - name: Debug proposed docker_sources_check.repo
                  ansible.builtin.debug:
                    var: docker_sources_check.repo
                    verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"

                - name: Backup old docker.sources file
                  ansible.builtin.command:
                    cmd: >-
                      mv
                      /etc/apt/sources.list.d/docker.sources
                      /etc/apt/sources.list.d/.docker.sources.{{ docker_date_timestamp }}.ansible.save
                  args:
                    creates: "/etc/apt/sources.list.d/.docker.sources.{{ docker_date_timestamp }}.ansible.save"
                    removes: /etc/apt/sources.list.d/docker.sources
                  vars:
                    docker_date_timestamp: "{{ ansible_facts.date_time.iso8601_basic_short }}"
                  when: docker_sources_contents_prior != docker_sources_check.repo | string | community.general.jc('ini')

              when: docker_sources_path.stat.exists | bool

            - name: Docker repository sources file present
              ansible.builtin.deb822_repository:
                allow_downgrade_to_insecure: false
                allow_insecure: false
                allow_weak: false
                architectures: "{{ ansible_facts.ansible_local.dpkg.arch }}"
                check_date: true
                check_valid_until: true
                components: stable
                enabled: true
                name: docker
                signed_by: /etc/apt/keyrings/docker.gpg
                suites: "{{ ansible_facts.distribution_release }}"
                types: deb
                uris: "https://download.docker.com/linux/{{ ansible_facts.distribution | lower }}"
              register: docker_sources

            - name: Print the changes in the Docker repository sources file  # noqa: no-handler
              block:

                - name: Debug updated docker_sources.repo
                  ansible.builtin.debug:
                    var: docker_sources.repo
                    verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"

                - name: Diff Docker repository sources file update
                  ansible.utils.fact_diff:
                    before: "{{ docker_sources_contents_prior | ansible.builtin.to_nice_yaml }}"
                    after: "{{ docker_sources.repo | string | community.general.jc('ini') | ansible.builtin.to_nice_yaml }}"
                  when:
                    - ( ansible_check_mode | bool ) or ( ansible_diff_mode | bool )
                    - docker_sources_contents_prior is defined
                    - docker_sources.repo is defined

              when: docker_sources.changed | bool

          when: docker_gpg_file.stat.exists | bool

      when: docker_asc_file.stat.exists | bool

    - name: Docker apt preferences present
      ansible.builtin.template:
        src: docker.pref.j2
        dest: /etc/apt/preferences.d/docker.pref
        mode: "0644"
        owner: root
        group: root
      register: docker_preferences

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      when: ( docker_sources.changed | bool ) or ( docker_preferences.changed | bool )

  tags:
    - docker
    - docker_apt
...
